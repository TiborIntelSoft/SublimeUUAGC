<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ag</string>
	</array>
	<key>name</key>
	<string>Attribute Grammar</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#multiComment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#haskellCode</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#singleComment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#stringValue</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#paraDecl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#agLowerCaseTypes</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#parameters</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#basicKeywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#haskellKeywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#dataclasses</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#fields</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#functions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#infixfunctions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numericValue</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>haskellCode</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>contentName</key>
			<string>source.haskell.embedded.ag</string>
			<key>name</key>
			<string>source.ag.embedded.haskell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.haskell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#haskellCode</string>
				</dict>
			</array>
		</dict>
		<key>singleComment</key>
		<dict>
			<key>match</key>
			<string>--.*$</string>
			<key>name</key>
			<string>comment.line.single.ag</string>
		</dict>
		<key>multiComment</key>
		<dict>
			<key>begin</key>
			<string>\{-</string>
			<key>end</key>
			<string>-\}</string>
			<key>name</key>
			<string>comment.multiline.ag</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#multiComment</string>
				</dict>
			</array>
		</dict>
		<key>agLowerCaseTypes</key>
		<dict>
			<key>match</key>
			<!-- Add both constants for lower case syntax and old style syntax -->
			<string>(TYPE|type) ([A-Z][a-zA-Z0-9]*[']*) = (MAP|MAYBE|map|maybe)</string>
			<key>name</key>
			<string>keyword.basic.ag</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.basic.ag</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.other.ag</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.basic.ag</string>
				</dict>
			</dict>
		</dict>
		<key>basicKeywords</key>
		<dict>
			<key>match</key>
			<!-- Add both constants for lower case syntax and old style syntax -->
			<string>\b(imports|ext|inh|chn|syn|around|module|include|deriving|data|attr|sem|wrapper|use|type|set|self|either|intmap|AROUND|MODULE|INCLUDE|DERIVING|DATA|ATTR|SEM|WRAPPER|USE|TYPE|SET|SELF|EITHER|INTMAP)\b(?=[\s)])</string>
			<key>name</key>
			<string>keyword.basic.ag</string>
		</dict>
		<key>haskellKeywords</key>
		<dict>
			<key>match</key>
			<string>\b(do|case|of|let|in|if|then|else)\b</string>
			<key>name</key>
			<string>keyword.haskell.embedded.ag</string>
		</dict>
		<key>stringValue</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.ag</string>
		</dict>
		<key>numericValue</key>
		<dict>
			<key>match</key>
			<string>(\-?[0-9]+\.[0-9]+)|(\-?[0-9]+)</string>
			<key>name</key>
			<string>constant.numeric.ag</string>
		</dict>
		<key>parameters</key>
		<dict>
			<key>match</key>
			<string>(@)([a-z][a-zA-Z0-9_]*)[ ]*(\.)[ ]*([a-z][a-zA-Z0-9_]*)|([a-z][a-zA-Z0-9_]*)?[ ]*(\.)[ ]*([a-z][a-zA-Z0-9_]*)|(@)?([a-z][a-zA-Z0-9_]*)?[ ]*(\.)[ ]*\([ ]*([a-z][a-zA-Z0-9_]*)([ ]*,[ ]*([a-z][a-zA-Z0-9_]*))*[ ]*\)</string>
			<key>name</key>
			<string>meta.variable.parameter.ag</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ag</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.ag</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>meta.separator.attribute.ag</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.ag</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.ag</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>meta.separator.attribute.ag</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.ag</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ag</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.ag</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>meta.separator.attribute.ag</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.ag</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.ag</string>
				</dict>
			</dict>
		</dict>
		<key>fields</key>
		<dict>
			<key>match</key>
			<string>(@)([a-z][a-zA-Z0-9_]*)</string>
			<key>name</key>
			<string>meta.variable.parameter.ag</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ag</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.ag</string>
				</dict>
			</dict>
		</dict>
		<key>functions</key>
		<dict>
			<key>match</key>
			<string>([a-z][a-zA-Z0-9_]*'?)(?=[\s),\]])</string>
			<key>name</key>
			<string>support.function.embedded.haskell.ag</string>
		</dict>
		<key>operators</key>
		<dict>
			<key>match</key>
			<string>[|!%$?~+*:\-.=&lt;/&gt;\\]+</string>
			<key>name</key>
			<string>keyword.operator.ag</string>
		</dict>
		<key>infixfunctions</key>
		<dict>
			<key>match</key>
			<string>(`[a-z][a-zA-Z0-9_]*'?`)(?=[\s)])</string>
			<key>name</key>
			<string>keyword.operator.ag</string>
		</dict>
		<key>dataclasses</key>
		<dict>
			<key>match</key>
			<string>([A-Z][a-zA-Z0-9_]*[']*)((\.)([a-z][a-zA-Z0-9_]*[']*))?</string>
			<key>name</key>
			<string>meta.constant.other.ag</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.ag</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>meta.separator.attribute.ag</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.function.haskell.ag</string>
				</dict>
			</dict>
		</dict>
		<key>paraDecl</key>
		<dict>
			<key>match</key>
			<string>([a-z][a-zA-Z0-9_]*)[ ]*(::|:) | ([a-z][a-zA-Z0-9_]*) (use|USE)</string>
			<key>name</key>
			<string>meta.variable.parameter.ag</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.ag</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ag</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.ag</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.basic.ag</string>
				</dict>
			</dict>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.ag</string>
</dict>
</plist>
